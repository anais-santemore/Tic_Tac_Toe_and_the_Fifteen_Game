{"version":3,"sources":["images/nsgLogoSnipped.png","logo.svg","components/Navbar/MenuList.js","components/Navbar/MobileMenu.js","components/Navbar/Navbar.js","components/Navbar/SpacerBox.js","pages/WelcomePage.js","logic/GameLogic.js","components/Board/Square.js","components/Board/TicTacToeBoard.js","components/Panels/Parts/StatusHeader.js","components/Panels/Parts/GameNumber.js","components/Panels/Parts/WinLossDrawRecord.js","components/Buttons/NewGameButton.js","components/Buttons/UndoButton.js","components/Panels/HumanPanel.js","pages/PlayVsHuman.js","logic/BotLogic.js","components/Buttons/DifficultyModeButtons.js","components/Buttons/BotGoFirstButton.js","components/Panels/BotPanel.js","pages/PlayVsBot.js","components/Panels/Parts/CoachsCommentary.js","components/Buttons/ShowHintsButton.js","components/Panels/CoachPanel.js","pages/PlayWithCoach.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","list","width","backgroundColor","listItem","color","palette","common","white","icon","alignContent","justifyContent","MenuList","classes","Fragment","ListItem","key","button","component","RouterLink","to","Icon","className","root","ListItemText","primary","primaryTypographyProps","variant","pathname","fontSize","main","height","fullList","drawer","paper","menu","display","alignItems","menuButton","MobileMenu","anchor","React","useState","open","state","setState","toggleDrawer","event","type","Box","Button","onClick","aria-controls","aria-haspopup","menuIcon","Drawer","onClose","role","onKeyDown","List","heightInRem","navbarRoot","zIndex","navbarContainer","flexDirection","spacerBox","padding","logo","backgroundImage","backgroundPosition","backgroundRepeat","backgroundSize","pageTitle","flex","Navbar","props","OneSizeNavbar","AppBar","navbar","position","elevation","Container","maxWidth","disableGutters","Grid","container","item","xs","Typography","align","border","paddingTop","paddingLeft","top","minHeight","textAlign","WelcomePage","py","gutterBottom","paragraph","mb","sm","href","p","trioList","i","j","k","complementOf","newTrio","push","generateTrioList","sumOfTwo","listOfPossiblePositions","positionsList","parentLength","childPositions","map","parent","getChildren","flat","getListOfPossiblePositions","outcomeMap","Map","length","positions","mls","set","outcome","generatePositionToOutcomeMap","status","xHasWon","oHasWon","nextPlayer","gameOver","gameHasBeenWon","sumsOfThree","xNumbers","includes","oNumbers","finalOutcome","childrensOutcomes","child","get","predictedOutcome","moveListStringToArray","filter","move","turn","Array","from","e","Number","children","availableNumbers","getValidMoves","forEach","Set","delete","parseInt","charAt","intersect","listOne","listTwo","moveSet","sums","sum","sumsOfTwo","square","iconX","black","iconO","noColor","win","draw","lose","Square","squareIcon","number","handleBoardClick","console","error","unknown","claimed","unclaimed","Paper","toString","board","row","Board","moveList","gameStatus","boardIcons","data","fill","squareId","getBoardIcons","boardColors","ml","colors","Xs","Os","trio","num","highlightWins","showHints","getHintColor","log","getBoardHints","squares","newSquare","slice","StatusHeader","noWrap","statusMessage","gameNumber","record","margin","WinLossDrawRecord","playMode","playerOne","playerTwo","humanPlaysX","NewGameButton","handleNewGameClick","disabled","mr","UndoButton","handleUndoClick","panel","infoArea","controls","HumanPanel","s","spacing","boardArea","panelArea","PlayVsHuman","setMoveList","setGameNumber","setRecord","squareClicked","updatedMoveList","concat","gameDrawn","shortenedMoveList","nextGameNumber","winningMoves","complements","urgentDefensiveMoves","selectMoveRandomly","Math","floor","random","selectedButton","unselectedButton","DifficultyModeButtons","moveNumber","handleLetBotGoFirstClick","difficultyMode","easyButton","handleDifficultyModeChange","mediumButton","hardButton","handleBotGoFirstClick","BotPanel","PlayVsBot","setHumanPlaysX","setDifficultyMode","warn","handleGameOver","handleBotsTurn","assert","newDifficulty","result","botMove","getBotMove","setTimeout","easyProtocol","mediumProtocol","hardProtocol","wins","defensiveMoves","time","sorted","winningForBot","drawing","winningForHuman","newPosition","sortBotMoves","commetaryBox","CoachsCommentary","commentLabel","next","prev","comment","getCommentary","ShowHintsButton","toggleShowHints","buttonArea","CoachPanel","currentStatus","currentOutcome","previousOutcome","label","doubleAttackingMoves","getCommentLabel","PlayWithCoach","setmoveList","setShowHints","createMuiTheme","light","dark","contrastText","secondary","text","action","disabledBackground","disabledOpacity","typography","h4","lineHeight","h5","danger","shape","borderRadius","responsiveFontSizes","overflowY","overflowX","App","CssBaseline","ThemeProvider","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.c1fcfd40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nsgLogoSnipped.a2170e48.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\n\r\n// React ROUTER\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// MATERIAL-UI COMPONENTS\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n// ICONS \r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        width: 'inherit',\r\n        // backgroundColor: theme.palette.primary.dark\r\n        backgroundColor: 'inherit'\r\n\r\n    },\r\n    listItem: {\r\n        color: theme.palette.common.white,\r\n    },\r\n    icon: {\r\n        width: '45px',\r\n        color: theme.palette.common.white,\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function MenuList() {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        \r\n        <React.Fragment >\r\n\r\n            <ListItem\r\n                key={'welcome'}\r\n                button\r\n                component={RouterLink}\r\n                to='/'\r\n            >\r\n                <Icon className={\"fas fa-home fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Welcome'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                key={'play_vs_human'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/play_vs_human',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-user-friends fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Play vs. Human'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                key={'play_vs_bot'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/play_vs_bot',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-robot fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Play vs. Bot'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n            <ListItem\r\n                key={'play_with_coach'}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/play_with_coach',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-question fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Play with Coach'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem>\r\n\r\n\r\n            {/* <ListItem\r\n                key={'learn about magic squares'}\r\n                className={classes.listItem}\r\n                button\r\n                component={RouterLink}\r\n                to={{\r\n                    pathname: '/magic_squares',\r\n                }}\r\n            >\r\n                <Icon className={\"fas fa-question fa-2x\"}\r\n                    classes={{ root: classes.icon }}\r\n                />\r\n                <ListItemText\r\n                    primary={'Learn about Magic Squares'}\r\n                    primaryTypographyProps={{ variant: 'h5' }}\r\n                />\r\n            </ListItem> */}\r\n\r\n        </React.Fragment>\r\n    );\r\n}","import React from 'react';\r\n\r\n// MY components\r\nimport MenuList from \"./MenuList\";\r\n\r\n// MATERIAL-UI COMPONENTS\r\nimport Box from '@material-ui/core/Box';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\n\r\n// ICONS\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n    list: {\r\n        width: 'auto',\r\n        fontSize: '0.8rem',\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: '100%'\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n    drawer: {\r\n        // backgroundColor: theme.palette.primary.main,\r\n        height: 'auto'\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: 'auto'\r\n    },\r\n    menu: {\r\n        // border: 'solid red 1px',\r\n        backgroundColor: theme.palette.primary.main,\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    menuButton: {\r\n        color: theme.palette.common.white,\r\n        // fontSize: '5rem',\r\n\r\n    }\r\n}));\r\n\r\nexport default function MobileMenu() {\r\n    const classes = useStyles();\r\n    const [state, setState] = React.useState({\r\n        open: false,\r\n    });\r\n\r\n    const toggleDrawer = (anchor, open) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n\r\n        setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n    const list = (anchor) => (\r\n        <Box className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(anchor, false)}\r\n            onKeyDown={toggleDrawer(anchor, false)}\r\n        >\r\n            <List>\r\n                <MenuList />\r\n            </List>\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <Box className={classes.menu}>\r\n            <Button \r\n                onClick={toggleDrawer('open', true)}\r\n                className={classes.menuButton}\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n            >\r\n                <MenuIcon className={classes.menuIcon} fontSize='large' />\r\n            </Button>   \r\n            <Drawer \r\n                className={classes.drawer}\r\n                classes={{ paper: 'paper'}}\r\n                // PaperProps={classes.paper}\r\n                anchor={'right'} \r\n                open={state['open']} \r\n                onClose={toggleDrawer('open', false)}\r\n                onClick={toggleDrawer('open', false)}\r\n            >\r\n                    {list('right')}\r\n            </Drawer>\r\n        </Box>\r\n    );\r\n}","import React from 'react';\r\n\r\n// MY COMPONENTS\r\nimport MobileMenu from \"./MobileMenu\";\r\n\r\n// Image Imports\r\nimport logo from \"../../images/nsgLogoSnipped.png\";\r\n\r\n\r\n// MATERIAL-UI COMPONENTS\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AppBar from '@material-ui/core/AppBar';\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst heightInRem = 3.6;\r\nconst height = `${heightInRem}rem`;\r\nconst halfHeight = `${heightInRem/2}rem`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navbarRoot: {\r\n        // border: 'solid blue 1px',\r\n        width: '100vw',\r\n        height: height,\r\n\r\n        backgroundColor: theme.palette.primary.main,\r\n        color: theme.palette.common.white,\r\n\r\n        zIndex: '1200',\r\n        display: 'flex',\r\n\r\n    },\r\n    navbarContainer: {\r\n        // border: 'solid blue 1px',\r\n        height: height,\r\n        backgroundColor: 'inherit',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    spacerBox: {\r\n        // border: 'solid blue 1px',\r\n        // padding: halfHeight,\r\n        padding: height,\r\n    },\r\n    logo: {\r\n        height: height,\r\n        width: height,\r\n        backgroundImage: `\r\n            url(${logo})  \r\n        `,\r\n        backgroundPosition: 'left bottom',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'auto 95%',\r\n    },\r\n    pageTitle: {\r\n        // border: 'solid red 1px',\r\n        height: '100%',\r\n        flex: '2 1 80%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    \r\n    icon: {\r\n        width: '45px',\r\n        color: theme.palette.common.white,\r\n        alignContent: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    \r\n}));\r\n\r\n\r\nexport default function Navbar(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.navbarRoot} >\r\n            <OneSizeNavbar pageTitle={props.pageTitle} />\r\n            {/* <Box className={classes.spacerBox} /> */}\r\n        </Box>\r\n        \r\n    )\r\n}\r\n\r\nfunction OneSizeNavbar(props) {\r\n    const classes = useStyles();\r\n    const pageTitle = props.pageTitle;\r\n\r\n    return (\r\n        <Box  >\r\n            <AppBar\r\n                className={classes.navbar}\r\n                position=\"fixed\"\r\n                elevation={3}\r\n            >\r\n                <Container\r\n                    className={classes.navbarContainer}\r\n                    maxWidth='md'\r\n                    disableGutters\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={2} >\r\n                            <Box className={classes.logo} />\r\n                        </Grid>\r\n                        <Grid item xs={8} >\r\n                            <Typography className={classes.pageTitle} align='center' variant='h4' >\r\n                                {pageTitle}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2} >\r\n                            <MobileMenu />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </AppBar>\r\n        </Box>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\n\r\n// MATERIAL-UI COMPONENTS\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst heightInRem = 3.6;\r\nconst height = `${heightInRem}rem`;\r\nconst halfHeight = `${heightInRem / 2}rem`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    spacerBox: {\r\n        border: 'solid blue 1px',\r\n        // paddingTop: halfHeight,\r\n        paddingTop: height,\r\n        paddingLeft: '99vw',\r\n        // paddingX: '50vw',\r\n        position: 'absolute',\r\n        top: 0,\r\n    },\r\n}));\r\n\r\n\r\nexport default function SpacerBox(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.spacerBox} />\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport {\r\n    Link as RouterLink,\r\n} from \"react-router-dom\";\r\n\r\n// My Components\r\nimport SpacerBox from \"../components/Navbar/SpacerBox\";\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    root: {\r\n        // borderRight: 'solid black 1rem',\r\n        width: '100%',\r\n        minHeight: 'calc(100vh - 4rem)',\r\n\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        color: theme.palette.common.white,\r\n        padding: '1.0rem',\r\n        \r\n    }, \r\n    \r\n    button: {\r\n        // margin: 'auto',\r\n        backgroundColor: theme.palette.primary.main,\r\n        textAlign: 'center',\r\n        width: '95%',\r\n\r\n        // margin: '1.0rem',\r\n    }, \r\n    \r\n    \r\n}));\r\n\r\n\r\nexport default function WelcomePage() {\r\n    const classes = useStyles();\r\n    \r\n    \r\n    return (\r\n        <Container className={classes.root} maxWidth='md' >\r\n            <Box py={3} />\r\n            <Typography align='center' color='textPrimary' component='h1' variant='h2' gutterBottom >\r\n                Tic-Tac-Toe & Proof\r\n            </Typography>\r\n            <Grid container>\r\n                <Typography align='left' color='textPrimary' component='h4' variant='h4' gutterBottom >\r\n                    Proof: An Expression of Creativity\r\n                </Typography>\r\n                <Typography paragraph align='justify' color='textPrimary' component='p' variant='body1' gutterBottom >\r\n                    Logical proof is the foundation that all Math sits upon. \r\n                    Math is a human endeavor, an expression of creativity.\r\n                    Just like a musician expresses their creativity in a song, a mathematician expresses their creativity in a \r\n                    logical argument. As with songs, there are proofs that are considered classic, there are those that are seen as \r\n                    modern innovations on the classics, and others that are competely novel.\r\n                    Mathematical proofs can be profoundly beautiful and even elegant, however, to the untrained eye, this \r\n                    beauty and elegance can be difficult to see because proofs often involve a lot of abstraction and formal \r\n                    definitions. \r\n                </Typography>\r\n                \r\n                <Typography align='left' color='textPrimary' component='h4' variant='h4' gutterBottom >\r\n                    Tic-Tac-Toe as an Intro to Proof\r\n                </Typography>\r\n                <Typography paragraph align='justify' color='textPrimary' component='p' variant='body1' gutterBottom >\r\n                    I think it is a mistake to introduce students to the practice of writing \"proofs\" in the current usual way: \r\n                    in the context of a highschool geometry class, while simultaneously being introduced to similar and congruent \r\n                    triangles. Proof should be introduced in a context that is simple and familiar. \r\n                    My favorite way is to use the classic game Tic Tac Toe. I challenge kids to write down a detailed stategy that the \r\n                    first player can use to win everytime. If they have played enough Tic Tac Toe to have \r\n                    realized that the game usually ends in a draw, and they say \"There is no such winning strategy!\" then I ask them \r\n                    to proove that instead. (It can be done with pencil and paper, it will take several pages and will challenge \r\n                    your ability to organize your thoughts. It's much more than just playing lots of games and recording the results.\r\n                    This website includes a different way of expressing this proof in the Play with Coach section.)\r\n                    Once proof is understood in a familiar context, then kids can extend that understanding into whatever domain they \r\n                    desire. Understanding how to rigorously critique your own argument and data is key to being in conntrol of your own \r\n                    education.\r\n                </Typography>\r\n                <Box width=\"100%\" mb={3} >\r\n                    <Grid container> \r\n                        <Grid item xs={12} sm={4} >\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component={RouterLink}\r\n                                to='/play_vs_human'\r\n                            >\r\n                                Play Human vs. Human\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component={RouterLink}\r\n                                to='/play_vs_bot'\r\n                            >\r\n                                Play Human vs. Bot\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4} >\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component={RouterLink}\r\n                                to='/play_with_coach'\r\n                            >\r\n                                Play with Coach\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n                <Typography align='left' color='textPrimary' component='h4' variant='h4' gutterBottom >\r\n                    Defining Your Terms\r\n                </Typography>\r\n                <Typography paragraph align='justify' color='textPrimary' component='p' variant='body1' gutterBottom >\r\n                    In this lesson we will use certain words that we have and intuitive grasp on: mistake, threat, double-attack. We need to go beyond our intuitive \r\n                    understanding of these words and define them in a precice way. I leave writing and refining these definitions as an exercise for the student. \r\n                    Keep in mind, a good definition is an \"if and only if\" statement, it outlines the conditions which are both necessary and sufficient. \r\n                </Typography>\r\n                <Typography align='left' color='textPrimary' component='h4' variant='h4' gutterBottom >\r\n                    Proof on Paper\r\n                </Typography>\r\n                <Typography paragraph align='justify' color='textPrimary' component='p' variant='body1' gutterBottom >\r\n                    It may take you several pages, but you can prove using an exhaustive tree-diagram that in classic Tic-Tac-Toe both players worst case scenario\r\n                    if they avoid making any mistakes is a draw. If you get stuck or want to check your answers, take a look at the \"Learn Tic Tac Toe Strategy\" page.\r\n                </Typography>\r\n                <Typography align='left' color='textPrimary' component='h4' variant='h4' gutterBottom >\r\n                    Taking It Further\r\n                </Typography>\r\n                <Typography paragraph align='justify' color='textPrimary' component='p' variant='body1' gutterBottom >\r\n                    Is it possible for the player who goes first to make a mistake on the first move of the game? \r\n                    Is is possible for the player who goes second to make a mistake on their first move?\r\n                </Typography>\r\n                \r\n                \r\n                <Typography align='left' color='textPrimary' component='h4' variant='h4' gutterBottom >\r\n                    Behind the Scenes\r\n                </Typography>\r\n                <Typography variant='body1' color='textPrimary' className={classes.paragraph}>\r\n                    This lesson is built with code that is open-source and available on my <a href=\"https://github.com/nolastemgarden\">Github</a> account,\r\n                    so if you have something to add, a bug to report, or simply want to see how it works you are welcome to open an issue or &nbsp;\r\n                    <a href=\"https://github.com/nolastemgarden/tic-tac-toe-and-the-fifteen-game\">clone the repository</a>!\r\n                </Typography>\r\n            </Grid>\r\n            <Box p={5} />\r\n        </Container>\r\n    );\r\n}\r\n","// X always goes first! X and O will be shorthand for the player who goes First and the player who goes second.\r\n// PlayerOne and PlayerTwo are NOT markers of who goes first or second in any given game!\r\n// In the 15 game, PlayerOne and PlayerTWo are distinguished by dark-blue and light-blue\r\n\r\n// All functions exported from this module are used by PlayVsHuman.js PlayVsBot.js PlayWithCoach \r\n// There is some potential to add back in the 15 gameusing these same Game Logic helpers and a different version of the board.\r\n\r\n// Most functions here assume they will be called with a Move List String as the sole parameter. (just the exported ones?)\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Constants: Trio List & Possible Positions & Outcome Maps\r\n////////////////////////////////////////////////////////////////\r\nexport const trioList = generateTrioList()\r\nfunction generateTrioList() {\r\n    let trioList = []\r\n    for (let i = 1; i <= 7; i++) {\r\n        for (let j = i + 1; j <= 8; j++) {\r\n            let k = complementOf(i + j)\r\n            if (k > j && k <= 9) {\r\n                let newTrio = [i, j, k]\r\n                trioList.push(newTrio)\r\n            }\r\n        }\r\n    }\r\n    return trioList\r\n}\r\nexport function complementOf(sumOfTwo) {\r\n    return (15 - sumOfTwo)\r\n}\r\n\r\nconst listOfPossiblePositions = getListOfPossiblePositions()\r\nfunction getListOfPossiblePositions() {\r\n    // Returns an array of arrays of strings\r\n    // Layer 1) indices 0 thru 9 correspond to the lengths of the move lists contained there\r\n    // Layer 2) an array containing all valid move lists of that length\r\n    // Layer 3) Move List string representations\r\n    let positionsList = [[\"\"]]\r\n    for (let parentLength = 0; parentLength < 9; parentLength++) {\r\n        let parentPositions = positionsList[parentLength]\r\n        let childPositions = parentPositions.map(parent => getChildren(parent)).flat()\r\n        positionsList.push(childPositions)\r\n    }\r\n    return positionsList\r\n}\r\n\r\n\r\nexport const outcomeMap = generatePositionToOutcomeMap()\r\nfunction generatePositionToOutcomeMap() {\r\n    let outcomeMap = new Map()\r\n    let list = listOfPossiblePositions\r\n    for (let length = 9; length >= 0; length--) {\r\n        let positions = list[length]\r\n        for (let p = 0; p < positions.length; p++) {\r\n            let mls = positions[p]\r\n            outcomeMap.set(mls, outcome(mls, outcomeMap))\r\n        }\r\n    }\r\n    return outcomeMap\r\n\r\n\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\n//  Current Game Status: \"xWins\", \"oWins\", \"draw\",  \"xNext\", or \"oNext\"\r\n////////////////////////////////////////////////////////////////\r\nexport function status(mls) {\r\n    if (xHasWon(mls)) {\r\n        return (\"xWins\")\r\n    }\r\n    else if (oHasWon(mls)) {\r\n        return (\"oWins\")\r\n    }\r\n    else if (mls.length === 9) {\r\n        return (\"draw\")\r\n    }\r\n    else {\r\n        return nextPlayer(mls)  // \"xNext\" || \"oNext\"\r\n    }\r\n}\r\n////////////////////////////////////////////////////////////////\r\n// Game Status Helpers: BOOLEAN\r\n////////////////////////////////////////////////////////////////\r\nexport function nextPlayer(mls) {\r\n    return (mls.length % 2 === 0) ? \"xNext\" : \"oNext\"\r\n}\r\nexport function gameOver(mls) {\r\n    return (mls.length === 9 || gameHasBeenWon(mls)) ? true : false\r\n}\r\nfunction gameHasBeenWon(mls) {\r\n    return (xHasWon(mls) || oHasWon(mls)) ? true : false\r\n}\r\nexport function xHasWon(mls) {\r\n    return sumsOfThree(xNumbers(mls)).includes(15)\r\n}\r\nexport function oHasWon(mls) {\r\n    return sumsOfThree(oNumbers(mls)).includes(15)\r\n}\r\nexport function gameDrawn(mls) {\r\n    return (mls.length === 9 && !gameHasBeenWon(mls))\r\n}\r\nfunction gameWillBeDrawn(mls) {\r\n    // TODO\r\n}\r\nexport function moveNumber(mls) {\r\n    return (mls.length + 1)\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n//  Predicted and Final Game Outcomes: \"xWins\", \"oWins\", \"draw\"\r\n////////////////////////////////////////////////////////////////\r\nexport function outcome(mls, outcomeMap) {\r\n    return (gameOver(mls)) ? finalOutcome(mls) : predictedOutcome(mls, outcomeMap)\r\n}\r\nfunction finalOutcome(mls) {\r\n    let outcome = \"error\"\r\n    if (xHasWon(mls)) {\r\n        outcome = \"xWins\"\r\n    }\r\n    else if (oHasWon(mls)) {\r\n        outcome = \"oWins\"\r\n    }\r\n    else if (mls.length === 9) {\r\n        outcome = \"draw\"\r\n    }\r\n    return outcome\r\n}\r\nfunction predictedOutcome(mls, outcomeMap) {\r\n    let outcome = \"error\"\r\n    let childrensOutcomes = getChildren(mls).map(child => outcomeMap.get(child))\r\n    // console.log(`Position: ${position} --> childrensOutcomes: ${childrensOutcomes}`)\r\n    if (nextPlayer(mls) === \"xNext\") {\r\n        if (childrensOutcomes.includes(\"xWins\")) {\r\n            outcome = \"xWins\"\r\n        }\r\n        else if (childrensOutcomes.includes(\"draw\")) {\r\n            outcome = \"draw\"\r\n        }\r\n        else {\r\n            outcome = \"oWins\"\r\n        }\r\n    }\r\n    else {\r\n        if (childrensOutcomes.includes(\"oWins\")) {\r\n            outcome = \"oWins\"\r\n        }\r\n        else if (childrensOutcomes.includes(\"draw\")) {\r\n            outcome = \"draw\"\r\n        }\r\n        else {\r\n            outcome = \"xWins\"\r\n        }\r\n    }\r\n    return outcome\r\n}\r\n\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Isolate each players' claimed numbers: ARRAY(NUM)\r\n////////////////////////////////////////////////////////////////\r\nexport function xNumbers(mls) {\r\n    return moveListStringToArray(mls).filter((move, turn) => turn % 2 === 0)\r\n}\r\nexport function oNumbers(mls) {\r\n    return moveListStringToArray(mls).filter((move, turn) => turn % 2 === 1)\r\n}\r\n// function playerOneNumbers(mls) {  // Always the Human\r\n//     return (playerOneIsX) ? xNumbers(mls) : oNumbers(mls)\r\n// }\r\n// function playerTwoNumbers(mls) {  // Human or Bot, Depending on mode\r\n//     return (playerOneIsX) ? oNumbers(mls) : xNumbers(mls)\r\n// }\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Convert Move List Representations:   String <--> Array\r\n////////////////////////////////////////////////////////////////\r\nexport function moveListStringToArray(mls) {               // \"123\" --> [1,2,3]\r\n    return Array.from(mls).map(e => Number(e))\r\n}\r\nfunction moveListArrayToString(mla) {               // [1,2,3] --> \"123\"\r\n    return mla.toString().replaceAll(\",\", \"\")\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Get Children and Helpers:  An Array of move list Strings\r\n////////////////////////////////////////////////////////////////\r\nexport function getChildren(mls) {\r\n    let children = []\r\n    getValidMoves(mls).forEach(move => children.push(mls + move))\r\n    // this.validMoves(mls).forEach(move => children.push(mls + move))\r\n    return children\r\n}\r\nexport function getValidMoves(mls) {\r\n    return (gameOver(mls)) ? [] : availableNumbers(mls)\r\n}\r\nexport function availableNumbers(mls) {\r\n    let availableNumbers = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9])\r\n    for (let i = 0; i < mls.length; i++) {\r\n        availableNumbers.delete(parseInt(mls.charAt(i)))\r\n    }\r\n    // console.log(`Available Squares: ${availableNumbers}`)\r\n    return Array.from(availableNumbers)\r\n}\r\nexport function getParent(ml) {\r\n    return ml.slice(0, ml.length - 1)\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Lowest Level Logic\r\n////////////////////////////////////////////////////////////////\r\nexport function intersect(listOne, listTwo) {\r\n    return listOne.filter(item => listTwo.includes(item))\r\n}\r\nfunction sumsOfThree(moveSet) {\r\n    let sums = []\r\n    if (moveSet.length < 3) {\r\n        return sums\r\n    }\r\n    for (let i = 0; i < moveSet.length - 2; i++) {\r\n        for (let j = i + 1; j < moveSet.length - 1; j++) {\r\n            for (let k = j + 1; k < moveSet.length; k++) {\r\n                let sum = moveSet[i] + moveSet[j] + moveSet[k]\r\n                sums.push(sum)\r\n            }\r\n        }\r\n    }\r\n    return sums\r\n}\r\nexport function sumsOfTwo(moveSet) {\r\n    let sums = []\r\n    if (moveSet.length < 2) {\r\n        return sums\r\n    }\r\n    for (let i = 0; i < moveSet.length - 1; i++) {\r\n        for (let j = i + 1; j < moveSet.length; j++) {\r\n            let sum = moveSet[i] + moveSet[j]\r\n            sums.push(sum)\r\n        }\r\n    }\r\n    return sums\r\n}\r\n\r\n\r\n\r\nfunction factorial(num) {\r\n    console.assert(num >= 0 && num <=9, `Factorial called with a number out of this game's range!`)\r\n    let product = 1\r\n    for (let i = 1; i <= num; i++) {\r\n        product = product * i\r\n    }\r\n    return product\r\n    // This led to a fun research rabbit hole about how to more efficiently compute factorials using Paschals Triangle\r\n}\r\n\r\n// function inEfficientUnclaimedNumbers(ml) {\r\n//     let unclaimedNumbers = [];\r\n//     for (let i = 1; i <= 9; i++) {\r\n//         if (!ml.includes(i)) {\r\n//             unclaimedNumbers.push(i)\r\n//         }\r\n//     }\r\n//     // console.log(`List Empty Squares: ${emptySquaresList}`)\r\n//     return unclaimedNumbers;\r\n// }\r\n\r\n","import React from 'react';\r\n\r\n// My Logical Components\r\n\r\n// My Components\r\n\r\n// MUI  components\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    square: {\r\n        width: '31%',\r\n        height: '100%',\r\n        backgroundColor: theme.palette.common.white,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    iconX: {\r\n        width: '100%',\r\n        height: '100%',\r\n        color: theme.palette.common.black\r\n    },\r\n    iconO: {\r\n        width: '80%',\r\n        height: '80%',\r\n        color: theme.palette.common.black\r\n    },\r\n    noColor: {\r\n        backgroundColor: '#ddd',\r\n    },\r\n    win: {\r\n        backgroundColor: '#3B3'\r\n    },\r\n    draw: {\r\n        backgroundColor: '#FF3'\r\n    },\r\n    lose: {\r\n        backgroundColor: '#F44'\r\n    },\r\n}));\r\n\r\nexport default function Square(props) {\r\n    const classes = useStyles();\r\n    const number = props.number\r\n    const handleBoardClick = props.handleBoardClick\r\n\r\n    let squareIcon;\r\n    switch (props.icon) {\r\n        case 'x':\r\n            squareIcon = <ClearIcon className={classes.iconX} />\r\n            break;\r\n        case 'o':\r\n            squareIcon = <RadioButtonUncheckedIcon className={classes.iconO} />\r\n            break;\r\n        case '_':\r\n            squareIcon = <Typography variant='h3' color='textSecondary' ></Typography> // \r\n            break;\r\n        default:\r\n            console.error(\"Square passed symbol not 'x' 'o' or '_'\");\r\n    }\r\n\r\n    let className;\r\n    switch (props.color) {\r\n        case 'unknown':\r\n            className = `${classes.square} ${classes.unknown} `\r\n            break;\r\n        case 'claimed':\r\n            className = `${classes.square} ${classes.claimed} `\r\n            break;\r\n        case 'unclaimed':\r\n            className = `${classes.square} ${classes.unclaimed} `\r\n            break;\r\n        case 'noColor':\r\n            className = `${classes.square} ${classes.noColor} `\r\n            break;\r\n        case 'draw':\r\n            className = `${classes.square} ${classes.draw} `\r\n            break;\r\n        case 'win':\r\n            className = `${classes.square} ${classes.win} `\r\n            break;\r\n        case 'lose':\r\n            className = `${classes.square} ${classes.lose} `\r\n            break;\r\n        default:\r\n            className = `${classes.square} `\r\n    }\r\n\r\n    return (\r\n        <Paper\r\n            number={props.number}\r\n            elevation={4}\r\n            className={className}\r\n            onClick={() => handleBoardClick(number.toString())}\r\n        >\r\n            {squareIcon}\r\n        </Paper>\r\n    )\r\n}","import React from 'react';\r\n\r\n// My Logical Components\r\nimport { \r\n    status,\r\n    xNumbers, \r\n    oNumbers, \r\n    trioList, \r\n    outcomeMap,\r\n    intersect, \r\n    availableNumbers,\r\n    moveListStringToArray\r\n} from \"../../logic/GameLogic\";\r\n\r\n// My Components\r\nimport Square from \"./Square\";\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    board: {\r\n        // border: 'solid green 1px',\r\n        width: 'max(50vh, 100%)',\r\n        height: '50vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    row: {\r\n        // border: 'solid purple 1px',\r\n        width: '95%',  \r\n        height: '31%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between'\r\n    },\r\n}));\r\n\r\nexport default function Board(props) {\r\n    const classes = useStyles();    \r\n    const boardNumbers = [2,9,4,7,5,3,6,1,8]\r\n    let moveList = props.moveList\r\n    let gameStatus = status(moveList)\r\n\r\n    function getBoardIcons(mls) {\r\n        let data = Array(10).fill('_');  // Start with an array representing a board of NINE empty squares\r\n        let mla = moveListStringToArray(mls)\r\n        mla.forEach((squareId, turn) => {\r\n            data[squareId] = (turn % 2 === 0) ? 'x' : 'o'\r\n        })\r\n        return data;  // this method only deals with current board position, not hypotheticals.  Thus, it wants to use a version of helper squaresClaimedByPlayer() that does not require a moveList be explicitly passed in. \r\n    }\r\n    function getBoardColors(mls) {\r\n        if (gameStatus === \"xWins\" || gameStatus === \"oWins\") {\r\n            return highlightWins(mls)\r\n        }\r\n        else if (props.showHints === true) {\r\n            return getBoardHints(mls)\r\n        }\r\n        else {\r\n            return Array(10).fill('noColor')\r\n        }\r\n    }\r\n\r\n    function highlightWins(ml) {\r\n        let colors = Array(10).fill('noColor')\r\n        let Xs = xNumbers(ml)\r\n        let Os = oNumbers(ml)\r\n        let winningTrios = trioList.filter(trio =>\r\n            intersect(trio, Xs).length === 3 || intersect(trio, Os).length === 3\r\n        )\r\n        winningTrios.flat().forEach(num => colors[num] = 'win')\r\n        return colors\r\n    }\r\n    function getBoardHints(mls) {\r\n        let colors = Array(10).fill('noColor')\r\n        availableNumbers(mls).forEach(num => {\r\n            let outcome = outcomeMap.get(mls + num.toString())\r\n            colors[num] = getHintColor(outcome)\r\n        })\r\n        console.log(`COLORS: ${colors}`)\r\n        return colors\r\n    }\r\n\r\n    function getHintColor(outcome) {\r\n        if (outcome === \"draw\") {\r\n            return \"draw\"\r\n        }\r\n        else if (gameStatus === \"xNext\") {\r\n            return (outcome === \"xWins\") ? \"win\" : \"lose\"\r\n        }\r\n        else if (gameStatus === \"oNext\") {\r\n            return (outcome === \"oWins\") ? \"win\" : \"lose\"\r\n        }\r\n        else {\r\n            console.error(`Error in Get Hint Color`);\r\n        }\r\n    }\r\n\r\n    let boardIcons = getBoardIcons(moveList)\r\n    let boardColors = getBoardColors(moveList)\r\n    \r\n    let squares = []\r\n    boardNumbers.forEach(num => {\r\n        let newSquare =\r\n            <Square\r\n                key={num}\r\n                number={num}\r\n                icon={boardIcons[num]}\r\n                color={boardColors[num]}\r\n                handleBoardClick={props.handleBoardClick}\r\n            />\r\n        squares.push(newSquare);\r\n    })\r\n\r\n    return (\r\n        <Box className={classes.board} >\r\n            <Box className={classes.row} >\r\n                {squares.slice(0,3)}\r\n            </Box>\r\n            <Box className={classes.row} >\r\n                {squares.slice(3, 6)}\r\n            </Box>\r\n            <Box className={classes.row} >\r\n                {squares.slice(6, 9)}\r\n            </Box>\r\n        </Box>\r\n\r\n        // <Grid container className={classes.board}>\r\n        //     {squares}\r\n        // </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { status } from \"../../../logic/GameLogic\";\r\n\r\n// MUI Components\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function StatusHeader(props) {\r\n    const gameStatus = status(props.moveList);\r\n\r\n    function statusMessage(status) {\r\n        switch (status) {\r\n            case \"xWins\":\r\n                return \"Game Over. X Wins!\"\r\n            case \"oWins\":\r\n                return \"Game Over. O Wins!\"\r\n            case \"draw\":\r\n                return \"Game Over! Draw.\"\r\n            case \"xNext\":\r\n                return \"It is X's turn.\"\r\n            case \"oNext\":\r\n                return \"It is O's turn.\"\r\n            default:\r\n                return \"Error\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Typography color=\"textPrimary\" align='center' component='h1' variant='h4' noWrap gutterBottom>\r\n            {statusMessage(gameStatus)}\r\n        </Typography>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n// MUI Components\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function StatusHeader(props) {\r\n    const gameNumber = props.gameNumber;\r\n    return (\r\n        <Typography color=\"textPrimary\" align='center' component='h1' variant='h4' noWrap gutterBottom>\r\n            Game&nbsp;{gameNumber}:\r\n        </Typography>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n// Custom Components\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    record: {\r\n        color: theme.palette.common.white,\r\n        margin: '0rem 35%',\r\n        width: '30%',\r\n        height: '4.5rem',\r\n        fontSize: '1.1rem',\r\n    },\r\n\r\n}));\r\n\r\nexport default function WinLossDrawRecord(props) {\r\n    const classes = useStyles();\r\n\r\n    const record = props.record\r\n    const playMode = props.playMode\r\n\r\n    let playerOne = \"\"\r\n    let playerTwo = \"\"\r\n    if (playMode === \"humanVsHuman\") {\r\n        playerOne = \"Player X\"\r\n        playerTwo = \"Player O\"\r\n    } \r\n    else if (playMode === \"humanVsBot\") {\r\n        if (props.humanPlaysX) {\r\n            playerOne = \"X Human\"\r\n            playerTwo = \"O Bot\"\r\n        }\r\n        else {\r\n            playerOne = \"O Human\"\r\n            playerTwo = \"X Bot\"\r\n        }\r\n    }\r\n    else {\r\n        console.error(`WinLossDrawRecord tried to render with invalid playMode prop: ${playMode}`)\r\n    }\r\n    \r\n    return (\r\n        <Box className={classes.record} >\r\n            <Grid container >\r\n                <Grid item xs={9}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        {playerOne}:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {record[0]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container >\r\n                <Grid item xs={9}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        {playerTwo}:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {record[1]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container >\r\n                <Grid item xs={9}>\r\n                    <Typography color=\"textPrimary\" align='left' component='h3' variant='h5' noWrap >\r\n                        Draw:\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography color=\"textPrimary\" align='right' component='h3' variant='h5' noWrap >\r\n                        {record[2]}\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Components\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\n\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n}));\r\n\r\nexport default function NewGameButton(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => props.handleNewGameClick()}\r\n            disabled={!props.gameOver}\r\n        >\r\n            <Box mr={2} display=\"flex\" alignContent=\"center\" >\r\n                <ReplayIcon />\r\n            </Box>\r\n            New&nbsp;Game\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { getParent, gameOver, moveNumber } from \"../../logic/GameLogic\";\r\n\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n}));\r\n\r\nexport default function UndoButton(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => props.handleUndoClick()}\r\n            disabled={props.gameOver || moveNumber(props.moveList) === 1}\r\n        >\r\n            <Box mr={2} display=\"flex\" alignContent=\"center\" >\r\n                <UndoIcon />\r\n            </Box>\r\n            Undo\r\n        </Button>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { moveNumber } from \"../../logic/GameLogic\";\r\n\r\n// Custom Components\r\nimport StatusHeader from './Parts/StatusHeader';\r\nimport GameNumber from './Parts/GameNumber';\r\nimport WinLossDrawRecord from \"./Parts/WinLossDrawRecord\";\r\n\r\nimport NewGameButton from \"../Buttons/NewGameButton\";\r\nimport UndoButton from \"../Buttons/UndoButton\";\r\n\r\n// MUI Components\r\nimport {Box, Grid, Container} from '@material-ui/core';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        // border: 'solid orange 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    infoArea: {\r\n        // border: 'solid red 1px',\r\n        flex: '1 0 50%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '1.0rem',\r\n    },\r\n    controls: {\r\n        // border: 'solid green 1px',\r\n        flex: '1 0 50%',\r\n    },\r\n}));\r\n\r\nexport default function HumanPanel(props) {\r\n    const classes = useStyles();\r\n    \r\n    let gameNumber = props.gameNumber\r\n    let moveList = props.moveList\r\n    let status = props.status\r\n    let record = props.record\r\n\r\n    const handleNewGameClick = props.handleNewGameClick\r\n    const handleUndoClick = props.handleUndoClick\r\n\r\n    function gameOver(s = status) {\r\n        return (s === \"xWins\" || s === \"oWins\" || s === \"draw\")\r\n    }\r\n    \r\n\r\n    return (\r\n        <Container maxWidth='sm' className={classes.panel} >\r\n            <Box className={classes.infoArea} >\r\n                <Box display=\"flex\" justifyContent=\"center\" color=\"textPrimary\" >\r\n                    <GameNumber\r\n                        gameNumber={gameNumber}\r\n                    />&nbsp;&nbsp;&nbsp;\r\n                    <StatusHeader\r\n                        moveList={moveList}\r\n                    />\r\n                </Box>\r\n                <WinLossDrawRecord\r\n                    playMode=\"humanVsHuman\"\r\n                    humanPlaysX={props.humanPlaysX}\r\n                    record={record}\r\n                />\r\n            </Box>\r\n            <Grid container spacing={3} className={classes.controls} >\r\n                <Grid item xs={6} >\r\n                    <NewGameButton\r\n                        gameOver={gameOver()}\r\n                        handleNewGameClick={handleNewGameClick}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}  >\r\n                    <UndoButton\r\n                        moveList={moveList}\r\n                        gameOver={gameOver()}\r\n                        handleUndoClick={handleUndoClick}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Logical Components\r\nimport {status, gameOver, xHasWon, oHasWon, gameDrawn} from \"../logic/GameLogic\";\r\n\r\n// My React  Components\r\nimport TicTacToeBoard from \"../components/Board/TicTacToeBoard\";\r\nimport Panel from \"../components/Panels/HumanPanel\";\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Custom Styling\r\nimport '../styles/TicTacToe.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 'calc(100% - 3.6rem)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    boardArea: {\r\n        padding: '0.7rem',\r\n        width: 'min(55vh, 100%)',\r\n        height: '55vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    panelArea: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.common.black,\r\n        width: '100%',\r\n        height: '45vh',\r\n    },\r\n}));\r\n\r\n\r\nexport default function PlayVsHuman() {\r\n    const classes = useStyles();\r\n\r\n    let [moveList, setMoveList] = useState(\"\");\r\n    let [gameNumber, setGameNumber] = useState(1);     // In ODD numbered games X goes first\r\n    let [record, setRecord] = useState([0, 0, 0]);     // 3 element counter for humanWins, botWins, and tieGames.\r\n\r\n    return (\r\n        <Box className={classes.root} >\r\n            <Box py={1} />\r\n            <Box className={classes.boardArea}>\r\n                <TicTacToeBoard\r\n                    moveList={moveList}\r\n                    handleBoardClick={handleBoardClick}\r\n                />\r\n            </Box>\r\n            <Box className={classes.panelArea}>\r\n                <Panel\r\n                    gameNumber={gameNumber}\r\n                    record={record}\r\n                    moveList={moveList}\r\n                    status={status(moveList)}\r\n                    handleUndoClick={handleUndoClick}\r\n                    handleNewGameClick={handleNewGameClick}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n    \r\n    ///////////////////////////////////////////////////\r\n    // CLICK HANDLERS\r\n    ///////////////////////////////////////////////////\r\n    function handleBoardClick(squareClicked) {\r\n        if (gameOver(moveList)) {\r\n            console.log(\"return without effects from handleSquareClick(). The Game is already over.\")\r\n            return;\r\n        }\r\n        if (moveList.includes(squareClicked.toString())) {\r\n            console.log(\"return without effects from handleSquareClick(). That square has already been claimed.\")\r\n            return;\r\n        }\r\n        // If we reach this point the clicked square is open and the game is not over yet ... \r\n        let updatedMoveList = moveList.concat(squareClicked)\r\n        console.log(`MoveList: ${updatedMoveList}`)\r\n\r\n        setMoveList(updatedMoveList);\r\n\r\n        if (gameOver(updatedMoveList)) {\r\n            handleGameOver(updatedMoveList)\r\n        }\r\n    }\r\n    function handleUndoClick() {\r\n        const shortenedMoveList = moveList.slice(0, moveList.length - 1)\r\n        console.log(`handleUndoClick() removed ${moveList[moveList.length - 1]} . New Shortened history: ${shortenedMoveList}`);\r\n        setMoveList(shortenedMoveList);\r\n    }\r\n    function handleNewGameClick() {\r\n        const empty = [];\r\n        const nextGameNumber = ++gameNumber;\r\n        setMoveList(empty);\r\n        setGameNumber(nextGameNumber);\r\n    }\r\n\r\n    function handleGameOver(mls) {\r\n        // console.assert(gameOver(ml) === true, `NO EFFECT. handleGameOver called but the game isn't actually over!`);\r\n        if (xHasWon(mls)) {\r\n            setRecord([++record[0], record[1], record[2]])\r\n        }\r\n        else if (oHasWon(mls)) {\r\n            setRecord([record[0], ++record[1], record[2]])\r\n        }\r\n        else if (gameDrawn(mls)) {\r\n            setRecord([record[0], record[1], ++record[2]])\r\n        }\r\n        else {\r\n            console.error(`handleGameOver called with invalid game result!`)\r\n        }\r\n    }\r\n\r\n}\r\n","// X always goes first! X and O will be shorthand for the player who goes First and the player who goes second.\r\n// PlayerOne and PlayerTwo are NOT markers of who goes first or second in any given game!\r\n// In the 15 game, PlayerOne and PlayerTWo are distinguished by dark-blue and light-blue\r\nimport { outcomeMap, sumsOfTwo, complementOf, intersect, gameOver, xHasWon, oHasWon, gameDrawn, xNumbers, oNumbers, nextPlayer, availableNumbers } from \"./GameLogic\";\r\n\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n// Coach & Bot Logic: Immediately Winning & Urgent Defensive Moves \r\n/////////////////////////////////////////////////////////////////////////\r\n// For NEXT Player on NEXT turn\r\nexport function winningMoves(mls) { \r\n    if (nextPlayer(mls) === \"xNext\") {\r\n        let complements = sumsOfTwo(xNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n    else {\r\n        let complements = sumsOfTwo(oNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n}\r\nexport function urgentDefensiveMoves(mls) {\r\n    if (nextPlayer(mls) === \"xNext\") {\r\n        let complements = sumsOfTwo(oNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n    else {\r\n        let complements = sumsOfTwo(xNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n}\r\nexport function doubleAttackingMoves(mls) {\r\n    let doubleAttackingMoves = availableNumbers(mls).filter(num => urgentDefensiveMoves(mls.concat(num)).length > 1)\r\n    return doubleAttackingMoves\r\n}\r\n\r\n\r\nexport function drawingMoves(mls) { // For NEXT Player\r\n    if (nextPlayer(mls) === \"xNext\") {\r\n        let complements = sumsOfTwo(xNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n    else {\r\n        let complements = sumsOfTwo(oNumbers(mls)).map(sum => complementOf(sum))\r\n        return intersect(availableNumbers(mls), complements)\r\n    }\r\n}\r\n\r\n\r\nexport function winningMovesForBot(mls, humanPlaysX) {\r\n    availableNumbers(mls)\r\n    \r\n}\r\n\r\nexport function sortBotMoves(ml, humanPlaysX) {\r\n    let winningForBot = []\r\n    let drawing = []\r\n    let winningForHuman = []\r\n\r\n\r\n    let validMoves = getValidMoves(ml)\r\n    validMoves.forEach(move => {\r\n        let newPosition = ml.concat(move)\r\n        let outcome = outcomeMap.get(newPosition)\r\n        if (outcome === \"draw\") {\r\n            drawing.push(move)\r\n        }\r\n        else if (outcome === \"xWins\") {\r\n            if (humanPlaysX) {\r\n                winningForHuman.push(move)\r\n            }\r\n            else {\r\n                winningForBot.push(move)\r\n            }\r\n        }\r\n        else if (outcome === \"oWins\") {\r\n            if (humanPlaysX) {\r\n                winningForBot.push(move)\r\n            }\r\n            else {\r\n                winningForHuman.push(move)\r\n            }\r\n        }\r\n        else {\r\n            console.error(`Error in sortBotMoves`)\r\n        }\r\n    })\r\n    return {\r\n        \"winningForBot\": winningForBot,\r\n        \"drawing\": drawing,\r\n        \"winningForHuman\": winningForHuman,\r\n    }\r\n}\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Isolate each players' claimed numbers: ARRAY(NUM)\r\n////////////////////////////////////////////////////////////////\r\nfunction botsNumbers(ml, humanPlaysX) {  // Always the Human\r\n    return (humanPlaysX) ? oNumbers(ml) : xNumbers(ml)\r\n}\r\n\r\n\r\n// Randomly selects a move from a list of possible next moves.\r\nexport function selectMoveRandomly(moveSet) {\r\n    return moveSet[Math.floor(Math.random() * moveSet.length)]\r\n}\r\n\r\n/////////////////////////////////////////////////////////////////////////\r\n// Coach & Bot Logic: Immediately Winning & Urgent Defensive Moves \r\n/////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Get Children and Helpers:  An Array of move list Strings\r\n////////////////////////////////////////////////////////////////\r\nexport function getChildren(mls) {\r\n    let children = []\r\n    getValidMoves(mls).forEach(move => children.push(mls + move))\r\n    // this.validMoves(mls).forEach(move => children.push(mls + move))\r\n    return children\r\n}\r\nfunction getValidMoves(mls) {\r\n    return (gameOver(mls)) ? [] : availableNumbers(mls)\r\n}\r\n// export function availableNumbers(mls) {\r\n//     let availableNumbers = new Set([1, 2, 3, 4, 5, 6, 7, 8, 9])\r\n//     for (let i = 0; i < mls.length; i++) {\r\n//         availableNumbers.delete(parseInt(mls.charAt(i)))\r\n//     }\r\n//     // console.log(`Available Squares: ${availableNumbers}`)\r\n//     return Array.from(availableNumbers)\r\n// }\r\nexport function getParent(ml) {\r\n    return ml.slice(0, ml.length - 1)\r\n}\r\n\r\n////////////////////////////////////////////////////////////////\r\n// Opening Book\r\n////////////////////////////////////////////////////////////////\r\n// function getOpeningBookMove(ml) {\r\n//     console.assert(ml.length < 2)\r\n//     console.log(`BOT MAKING AN OPENING BOOK MOVE.`)\r\n\r\n//     if (ml.length === 0) {\r\n//         return selectMoveRandomly(availableNumbers(ml))\r\n//     }\r\n//     else if (ml[0] === 5) {\r\n//         return selectMoveRandomly([2, 4, 6, 8])\r\n//     }\r\n//     else if (ml[0] % 2 === 0) {  // If player took a corner, bot must take center.\r\n//         return [5]\r\n//     }\r\n//     else {\r\n//         return selectMoveRandomly(blockingMoves(ml))\r\n//     }\r\n// }","import React from 'react';\r\n\r\n// Custom Components\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\n\r\n// Custom Styling\r\nimport '../../styles/App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n    selectedButton: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: 'rgba(46, 107, 18, 1.0)',\r\n    },\r\n    unselectedButton: {\r\n        color: '#999999',\r\n        backgroundColor: 'rgba(46, 107, 18, 0.5)',\r\n    },\r\n    \r\n}));\r\n\r\nexport default function DifficultyModeButtons(props) {\r\n    const classes = useStyles();\r\n\r\n    const moveNumber = props.moveNumber;\r\n    const handleLetBotGoFirstClick = props.handleLetBotGoFirstClick\r\n    const difficultyMode = props.difficultyMode\r\n    // const handleDifficultyModeChange = props.handleDifficultyModeChange\r\n\r\n    const letBotGoFirstButton = (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => handleLetBotGoFirstClick()}\r\n            disabled={moveNumber !== 1}\r\n        >\r\n            Let&nbsp;Bot&nbsp;Go&nbsp;First\r\n        </Button>\r\n    );\r\n\r\n    let easyButton = (\r\n        <Button\r\n            className={`${classes.button} ${difficultyMode === \"easy\" ? classes.selectedButton : classes.unselectedButton} `}\r\n            variant={'contained'}\r\n            onClick={() => props.handleDifficultyModeChange(\"easy\")}\r\n        >\r\n            Easy\r\n        </Button>\r\n    )\r\n\r\n    let mediumButton = (\r\n        <Button\r\n            className={`${classes.button} ${difficultyMode === \"medium\" ? classes.selectedButton : classes.unselectedButton} `}\r\n            variant={'contained'}\r\n            onClick={() => props.handleDifficultyModeChange(\"medium\")}\r\n        >\r\n            Medium\r\n        </Button>\r\n    )\r\n\r\n    let hardButton = (\r\n        <Button\r\n            className={`${classes.button} ${difficultyMode === \"hard\" ? classes.selectedButton : classes.unselectedButton} `}\r\n            variant={'contained'}\r\n            onClick={() => props.handleDifficultyModeChange(\"hard\")}\r\n        >\r\n            Hard\r\n        </Button>\r\n    )\r\n\r\n\r\n    return (\r\n        <Grid container spacing={3} >\r\n            <Grid item xs={4}  >\r\n                {easyButton}\r\n            </Grid>\r\n            <Grid item xs={4}  >\r\n                {mediumButton}\r\n            </Grid>\r\n            <Grid item xs={4}  >\r\n                {hardButton}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n// Custom Components\r\n\r\n// MUI Components\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\n\r\n// Custom Styling\r\nimport '../../styles/App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        color: theme.palette.common.white,\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n}));\r\n\r\nexport default function DifficultyModeButtons(props) {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={() => props.handleBotGoFirstClick()}\r\n            disabled={props.moveList.length !== 0}\r\n        >\r\n            Let&nbsp;Bot&nbsp;Go&nbsp;First\r\n        </Button>\r\n    )\r\n\r\n}\r\n","import React from 'react';\r\n\r\nimport { status, outcomeMap, getParent, winningMoves, urgentDefensiveMoves, doubleAttackingMoves } from \"../../logic/GameLogic\";\r\n\r\n// Custom Components\r\nimport GameNumber from '../../components/Panels/Parts/GameNumber'\r\nimport StatusHeader from '../../components/Panels/Parts/StatusHeader'\r\nimport WinLossDrawRecord from '../../components/Panels/Parts/WinLossDrawRecord'\r\n\r\nimport DifficultyModeButtons from \"../../components/Buttons/DifficultyModeButtons\";\r\nimport NewGameButton from '../../components/Buttons/NewGameButton'\r\nimport BotGoFirstButton from '../../components/Buttons/BotGoFirstButton'\r\n \r\n// MUI Components\r\nimport { Box, Grid, Container } from '@material-ui/core';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        // border: 'solid orange 1px',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    infoArea: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        padding: '1.0rem 1.0rem 2.0rem',\r\n    },\r\n    controls: {\r\n        // border: 'solid green 1px',\r\n    },\r\n    \r\n}));\r\n\r\nexport default function BotPanel(props) {\r\n    const classes = useStyles();\r\n\r\n    let gameNumber = props.gameNumber\r\n    let moveList = props.moveList\r\n    let status = props.status\r\n    let record = props.record\r\n\r\n    let handleNewGameClick = props.handleNewGameClick\r\n    let handleBotGoFirstClick = props.handleBotGoFirstClick\r\n\r\n\r\n    function gameOver(s = status) {\r\n        return (s === \"xWins\" || s === \"oWins\" || s === \"draw\")\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth='sm' className={classes.panel} >\r\n            <Box className={classes.infoArea} >\r\n                <Box display=\"flex\" justifyContent=\"center\" color=\"textPrimary\" >\r\n                    <GameNumber \r\n                        gameNumber={gameNumber}\r\n                    />&nbsp;&nbsp;&nbsp;\r\n                    <StatusHeader \r\n                        moveList={moveList}\r\n                    />\r\n                </Box>\r\n                <WinLossDrawRecord\r\n                    playMode=\"humanVsBot\"\r\n                    humanPlaysX={props.humanPlaysX}\r\n                    record={record}\r\n                />\r\n            </Box>\r\n            <Grid container spacing={2} className={classes.controls} >\r\n                <Grid item xs={12}  >\r\n                    <DifficultyModeButtons \r\n                        difficultyMode={props.difficultyMode}\r\n                        handleDifficultyModeChange={props.handleDifficultyModeChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}   >\r\n                    <NewGameButton\r\n                        gameOver={gameOver(props.status)}\r\n                        handleNewGameClick={handleNewGameClick}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}    >\r\n                    <BotGoFirstButton \r\n                        gameOver={false}\r\n                        moveList={moveList}\r\n                        handleBotGoFirstClick={handleBotGoFirstClick}\r\n                    />\r\n                </Grid>\r\n\r\n\r\n            </Grid>\r\n        </Container>\r\n    )\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Logical Components\r\n// import positionToOutcomeMap from \"../pages/positionToOutcomeMap\";\r\nimport { status, gameOver, xNumbers, oNumbers, nextPlayer, availableNumbers } from \"../logic/GameLogic\";\r\nimport { selectMoveRandomly, winningMoves, urgentDefensiveMoves, sortBotMoves } from \"../logic/BotLogic\";\r\n\r\n// My React Components\r\nimport TicTacToeBoard from \"../components/Board/TicTacToeBoard\";\r\nimport BotPanel from \"../components/Panels/BotPanel\";\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Custom Styling\r\nimport '../styles/TicTacToe.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 'calc(100% - 3.6rem)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    boardArea: {\r\n        padding: '0.7rem',\r\n        width: 'min(55vh, 100%)',\r\n        height: '55vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    panelArea: {\r\n        width: '100%',\r\n        height: '45vh',\r\n    },\r\n}));\r\n\r\n// In Play With Coach mode X always goes first\r\n\r\nexport default function PlayVsBot(props) {\r\n    const classes = useStyles();\r\n\r\n    const xGoesFirst = true  // X always goes first\r\n    let [humanPlaysX, setHumanPlaysX] = useState(true);\r\n    \r\n    let startingPosition = \"\"  // vs []\r\n    let [moveList, setMoveList] = useState(startingPosition);\r\n\r\n    let [gameNumber, setGameNumber] = useState(1);\r\n    let [record, setRecord] = useState([0, 0, 0]);\r\n\r\n    let [difficultyMode, setDifficultyMode] = useState(\"hard\") // In \"hard\" mode my bot never makes a mistake.\r\n\r\n    return (\r\n        <Box className={classes.root} >\r\n            <Box py={1} />\r\n            <Box className={classes.boardArea}>\r\n                <TicTacToeBoard\r\n                    moveList={moveList}\r\n                    handleBoardClick={handleBoardClick}\r\n                />\r\n            </Box>\r\n            <Box className={classes.panelArea}>\r\n                <BotPanel\r\n                    gameNumber={gameNumber}\r\n                    status={status(moveList)}\r\n                    moveList={moveList}\r\n                    record={record}\r\n                    difficultyMode={difficultyMode}\r\n                    humanPlaysX={humanPlaysX}\r\n                    handleNewGameClick={handleNewGameClick}\r\n                    handleBotGoFirstClick={handleBotGoFirstClick}\r\n                    handleDifficultyModeChange={handleDifficultyModeChange}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n    function humansNumbers(mls) {  \r\n        return (humanPlaysX) ? xNumbers(mls) : oNumbers(mls)\r\n    }\r\n    function botsNumbers(mls) {  \r\n        return (humanPlaysX) ? oNumbers(mls) : xNumbers(mls)\r\n    }\r\n    function humanGoesNext(mls) {  \r\n        if (humanPlaysX) {\r\n            return (nextPlayer(mls) === \"xNext\")\r\n        } \r\n        else {\r\n            return (nextPlayer(mls) === \"oNext\")\r\n        }\r\n    }\r\n    \r\n\r\n    // CLICK HANDLERS\r\n    function handleBoardClick(num) {\r\n        if (!humanGoesNext(moveList)) {\r\n            console.warn(\"NO EFFECT. Be patient, the bot takes a second to move. \")\r\n            return 1\r\n        }\r\n        else if (moveList.includes(num)) {\r\n            console.warn(\"NO EFFECT. That number has already been claimed.\")\r\n            return 1\r\n        }\r\n        else if (gameOver(moveList)) {\r\n            console.warn(\"NO EFFECT. The Game is already over.\")\r\n            return 1\r\n        }\r\n        else {\r\n            let updatedMoveList = moveList.concat(num)\r\n            // console.log(`updatedMoveList: ${updatedMoveList} `)\r\n            setMoveList(updatedMoveList)\r\n            if (gameOver(updatedMoveList)) {\r\n                handleGameOver(updatedMoveList)\r\n            } else {\r\n                handleBotsTurn(updatedMoveList)\r\n            }\r\n            return 0\r\n        }\r\n    }\r\n\r\n\r\n    function handleGameOver(ml) {\r\n        // console.assert(gameIsOver(ml), `NO EFFECT. handleGameOver called but the game isn't actually over!`)\r\n        let result = status(ml)\r\n\r\n        if (result === \"draw\") {\r\n            setRecord([record[0], record[1], ++record[2]])\r\n        }\r\n        else if (result === \"xWins\") {\r\n            if (humanPlaysX) {\r\n                setRecord([++record[0], record[1], record[2]])\r\n            }\r\n            else {\r\n                setRecord([record[0], ++record[1], record[2]])\r\n            }\r\n        }\r\n        else if (result === \"oWins\") {\r\n            if (humanPlaysX) {\r\n                setRecord([record[0], ++record[1], record[2]])\r\n            }\r\n            else {\r\n                setRecord([++record[0], record[1], record[2]])\r\n            }\r\n        }\r\n        else {\r\n            console.error(`handleGameOver called with invalid game result: ${result}. `)\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    function handleNewGameClick() {\r\n        setGameNumber(++gameNumber)\r\n        setHumanPlaysX(true)\r\n        setMoveList(startingPosition)\r\n    }\r\n\r\n    function handleBotGoFirstClick() {\r\n        console.assert(moveList.length === 0, `handleLetBotGoFirstClick was called but it is not the frst move of the game!`)\r\n        setHumanPlaysX(false)\r\n        handleBotsTurn('') // if the bot is going first the movelist is empty.\r\n    }\r\n\r\n    function handleDifficultyModeChange(newDifficulty) {\r\n        setGameNumber(1)\r\n        setHumanPlaysX(true)\r\n        setRecord([0, 0, 0])\r\n        setMoveList(startingPosition)\r\n        setDifficultyMode(newDifficulty)\r\n    }\r\n\r\n\r\n    // Find and make a move for the Bot with a slight delay. \r\n    function handleBotsTurn(ml = moveList) {\r\n        let botMove = getBotMove(ml)\r\n        let updatedMoveList = ml.concat(botMove)\r\n        setTimeout(() => {\r\n            setMoveList(updatedMoveList)\r\n            if (gameOver(updatedMoveList)) {\r\n                console.log(\"Don't let player move again. Call handleGameOver instead.\")\r\n                handleGameOver(updatedMoveList)\r\n                return 1\r\n            }\r\n        }, 800)\r\n    }\r\n\r\n    //////////////////////////////////////////////////////////////     \r\n    //  GET  BOT  MOVE  PROTOCOLS\r\n    ////////////////////////////////////////////////////////////// \r\n\r\n    function getBotMove(ml = moveList) {\r\n        if (difficultyMode === \"easy\") {\r\n            return easyProtocol(ml)\r\n        }\r\n        else if (difficultyMode === \"medium\") {\r\n            return mediumProtocol(ml)\r\n        }\r\n        else if (difficultyMode === \"hard\") {\r\n            return hardProtocol(ml)\r\n        }\r\n        else {\r\n            console.error(`getBotMove called with invalid difficulty mode!!!`)\r\n        }\r\n    }\r\n\r\n    // In EASY mode: Bot wins immediately if it can and otherwise selects a random move. \r\n    function easyProtocol(ml) {\r\n        if (winningMoves(ml).length > 0) {\r\n            console.log(`BOT FOUND IMMEDIEATELY WINNING MOVES: ${winningMoves(ml)}`)\r\n            return selectMoveRandomly(winningMoves(ml))\r\n        }\r\n        else {\r\n            return selectMoveRandomly(availableNumbers(ml))\r\n        }\r\n    }\r\n\r\n    // In MEDIUM mode, Bot wins immediately if possible.\r\n    // In MEDIUM mode, Bot blocks any immediate threats but does not look any further ahead. \r\n    function mediumProtocol(ml) {\r\n        let wins = winningMoves(ml)\r\n        let defensiveMoves = urgentDefensiveMoves(ml)\r\n        if (wins.length > 0) {\r\n            console.log(`BOT FOUND IMMEDIATELY WINNING MOVES: ${wins}`)\r\n            return selectMoveRandomly(wins)\r\n        }\r\n        else if (defensiveMoves.length > 0) {\r\n            console.log(`BOT FOUND URGENT DEFENSIVE MOVES: ${defensiveMoves}`)\r\n            return selectMoveRandomly(defensiveMoves)\r\n        }\r\n        else {\r\n            return selectMoveRandomly(availableNumbers(ml))\r\n        }\r\n    }\r\n\r\n    // In HARD mode Bot looks for forcing moves that will allow it to make double attacks on its next move.\r\n    // In HARD mode Bot avoids letting Player make forcing moves that will lead to double attacks.\r\n    function hardProtocol(ml) {\r\n        console.log(`Outcome Graph Hard Protocol called for move list: [${ml}]`)\r\n        console.time('getHardFromGraph')\r\n        let sorted = sortBotMoves(ml, humanPlaysX)\r\n        // console.log(`BOT SORTED its choices from position [${ml}]:`)\r\n        // console.log(`Bot found these Winning Moves: ${sorted.winningForBot}`)  \r\n        // console.log(`Bot found these Drawing Moves: ${sorted.drawing}`)\r\n        // console.log(`Bot found these Losing Moves: ${sorted.winningForHuman}`)\r\n        if (sorted.winningForBot.length > 0) {\r\n            return selectMoveRandomly(sorted.winningForBot)\r\n        }\r\n        else if (sorted.drawing.length > 0) {\r\n            return selectMoveRandomly(sorted.drawing)\r\n        }\r\n        else {\r\n            console.error(`Bot Found NEITHER Winning NOR Drawing Moves!!! Picking from Losing Moves: ${sorted.winningForHuman} `)\r\n            return selectMoveRandomly(sorted.winningForHuman)    \r\n        }\r\n    }\r\n    // function hardProtocolWithShortcuts(ml) {\r\n    //     console.log(`Hard Protocol called for move list: [${ml}]`)\r\n    //     if (ml.length <= 1) {\r\n    //         return getOpeningBookMove(ml)\r\n    //     }\r\n    //     let wins = winningMoves(ml)\r\n    //     let blocks = urgentDefensiveMoves(ml)\r\n\r\n    //     if (wins.length > 0) {\r\n    //         return selectMoveRandomly(wins)\r\n    //     }\r\n    //     else if (blocks.length > 0) {\r\n    //         return selectMoveRandomly(blocks)\r\n    //     }\r\n\r\n    //     else {\r\n\r\n\r\n    //     }\r\n    // }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\nimport { nextPlayer } from \"../../../logic/GameLogic\";\r\n\r\n// My Components\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n// Custom Styling\r\n// import '../../styles/TicTacToe.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    commetaryBox: {\r\n        color: theme.palette.common.white,\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function CoachsCommentary(props) {\r\n    const classes = useStyles();\r\n\r\n    let moveList = props.moveList\r\n    let commentLabel = props.commentLabel\r\n\r\n    let next = (nextPlayer(moveList) === \"xNext\") ? \"X\" : \"O\"\r\n    let prev = (nextPlayer(moveList) === \"xNext\") ? \"O\" : \"X\"\r\n\r\n    return (\r\n        <Box className={classes.commetaryBox} >\r\n            <Typography align='justify' component='p' variant='body1' gutterBottom>\r\n                {getCommentary(commentLabel, next)}\r\n            </Typography>\r\n        </Box>\r\n    )\r\n\r\n    function getCommentary(commentLabel, next) {\r\n        console.log(`getCommentary called with commentLabel: ${commentLabel}`);\r\n        \r\n        let comment = `Error in get commentary.  Called with commentLabel: ${commentLabel}`\r\n        switch (commentLabel) {\r\n            case \"newGame\":\r\n                comment = `New Game. X always goes first. It may look like X has 9 different \r\n                options but, considering symmetry, there are really only 3: Center, Edge, or Corner. \r\n                Do any of them set X up to force a win? Is there any move for X that would be a 'mistake'?`\r\n                break;\r\n            case \"centerOpening\":\r\n                comment = `The Center Opening is the most popular. I think this is because there are more three-in-a-rows that\r\n                include the center square than the edges and corners. Though X is still on track for a draw, the center opening\r\n                is the easiest for O to defend against because, considering symmetry, O really only has two options, edge or corner.\r\n                One is good and keeps O on track for a draw. The other is bad and opens the door for X to force a win.`\r\n                break;\r\n            case \"cornerOpening\":\r\n                comment = `The Corner Opening can lead X to a winning double attack if O makes a mistake on their first move. \r\n                O has 5 non-symetrical options in this position, however, the only sound move that O has in this position is also the most\r\n                intuitive one. Proove this to yourself by going through O's 4 losing options and finding a plan that guarantees X \r\n                a victory in each one.`\r\n                break;\r\n            case \"edgeOpening\":\r\n                comment = `The Edge Opening is my personal favorite. It is the least commonly played and is the most complex to analyze.\r\n                There are many tricks and traps in this opening that both players can take advantage of!\r\n                O has five non-symmetrical options. Don't settle for just finding one move that lets O guarantee a draw,\r\n                dig into each of the five options and find the ones that maximize the chances X will make a mistake!`\r\n                break;\r\n            case \"immediateWin\":\r\n                comment = `${next} goes next and has the ability to win immediately! That means ${prev} must have made a mistake \r\n                earlier in the game. Go back and see if you can find the mistake and choose the better option instead.`\r\n                break;\r\n            case \"urgentDefence\":\r\n                comment = `${next} goes next and has an urgent defensive move they must make in order to not lose on the next turn!`\r\n                break;\r\n            case \"losing\":\r\n                comment = `${next} goes next, has no immediate way to win and ${prev} has more than one threat, meaning ${next} cannot \r\n                defend against them all. Defeat is on its way no matter what ${next} does now. This move is not the mistake though! \r\n                Go back and find the mistake that allowed ${prev} to create this double attack.`\r\n                break;\r\n            case \"doubleAttack\":\r\n                comment = `Though ${next} cannot win this turn, they can create a double attack, setting up for a\r\n                guaranteed win on their next turn no matter what ${prev} does. Dont's settle for a move that only creates \r\n                one threat, you need to make two simultaneous threats in order to win.`\r\n                break;\r\n            case \"mistake\":\r\n                comment = `A mistake! Before that last move ${prev} was on track for a draw. That last move  \r\n                has given ${next} the opportunity to force a win. ${next} cannot create a double attack quite yet, so they will\r\n                have to look further into the future to see what forced continuations can lead them to making a double attack on\r\n                their next move. Don't settle for a draw anymore! Make the most of your opponent's mistake.`\r\n                break;\r\n            case \"missedWin\":\r\n                comment = `${next} made the first mistake and gave ${prev} a chance to force a win, but ${prev} replied with\r\n                another mistake and now they have missed missed that chance to win! Look for forcing moves that lead to double\r\n                attacks and you will avoid mistakes like the one ${prev} just made.`\r\n                break;\r\n            case \"sound\":\r\n                comment = `Good. The last move by ${prev} was \"sound\" meaning it has not hurt their worst case outcome: previously\r\n                on track for a draw, still on track for a draw.`\r\n                break;\r\n            case \"xWins\":\r\n                comment = `X has won the game! That means O must have made a mistake along the way.\r\n                Go back and see if you can find it on your own. If not, check the hints. In starting position all squares are Yellow, \r\n                indicating that no matter which X chooses they will be on track for a draw, at best. When Red squares appear in the hints\r\n                that indicates possible mistakes to avoid. Green squares indicate winning responses to mistakes`\r\n                break;\r\n            case \"oWins\":\r\n                comment = `O has won the game! That means X must have made a mistake along the way.\r\n                Go back and see if you can find it on your own. If not, check the hints. In starting position all squares are Yellow,\r\n                indicating that no matter which X chooses they will be on track for a draw, at best. When Red squares appear in the hints\r\n                that indicates possible mistakes to avoid. Green squares indicate winning responses to mistakes`\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        return comment\r\n \r\n        \r\n\r\n        // If two moves has been made\r\n        // if (ml.length === 2) {\r\n        //     let message = '';\r\n        //     if (thereIsADistantForcedWinCreatingMove()) {\r\n        //         message = `O's first move was a mistake and now X can ensure victory! But how?`\r\n        //     }\r\n        //     else {\r\n        //         let answer = (gameLosingMoves().length > 0) ? 'Yes! So be careful.' : 'No! You\\'re safe no matter what.';\r\n        //         message = `O's first move was sound. None of X's current options ensure victory, but do any actually lose?  ${answer}`\r\n        //     }\r\n        //     return message;\r\n        // }\r\n\r\n        // If three moves have been made\r\n        // if (ml.length >= 3) {\r\n        //     let message = '';\r\n        //     if (thereIsAnImmediateWin()) {\r\n        //         message = `You have a winning move! Defensive moves are irrelevant.`\r\n        //     }\r\n        //     else if (thisIsADoubleAttack()) {\r\n        //         message = `You cannot win right now and cannot block all of your opponent's threats. Which move led you to from a draw to defeat?`\r\n        //     }\r\n        //     else if (thereIsADoubleAttackCreatingMove()) {\r\n        //         message = `You can set up a winning double attack! Don't settle for empty threats, \r\n        //         think hard and be sure that you are setting yourself up to win no matter what!`\r\n        //     }\r\n        //     else if (thereIsAnUrgentDefensiveMove()) {\r\n        //         message = `You cannot win right now so you must defend the one key square.`\r\n        //     }\r\n\r\n        //     else {\r\n        //         let answer = (gameLosingMoves().length > 0) ?\r\n        //             'Nonetheless, it is possible for you to make a mistake and lose right now. Play carefully!' :\r\n        //             'You\\'re on track for a draw no matter what move you play in this position.';\r\n        //         message = `You have neither a winning attack nor an urgent defensive move. ${answer}`\r\n        //     }\r\n        //     return message;\r\n        // }\r\n\r\n    }\r\n\r\n    \r\n    \r\n}\r\n","import React from 'react';\r\n\r\n// My Components\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// MUI Icons\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        width: '100%',\r\n        height: '2.1rem',\r\n        fontSize: '1rem',\r\n    },\r\n}));\r\n\r\nexport default function ShowHintsButton(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => props.toggleShowHints()}\r\n        >\r\n            <Box mr={2} display=\"flex\" alignContent=\"center\" >\r\n                <HelpOutlineIcon />\r\n            </Box>\r\n            {props.showHints ? \"Hide Hints\" : \"Show Hints\"}\r\n        </Button>\r\n    )\r\n}\r\n    \r\n\r\n    \r\n\r\n","import React from 'react';\r\n\r\nimport { status, outcomeMap, getParent, gameOver } from \"../../logic/GameLogic\";\r\nimport { winningMoves, urgentDefensiveMoves, doubleAttackingMoves } from \"../../logic/BotLogic\";\r\n\r\n\r\n// Custom Components\r\nimport StatusHeader from './Parts/StatusHeader';\r\nimport CoachsCommentary from \"./Parts/CoachsCommentary\";\r\n\r\nimport UndoButton from \"../Buttons/UndoButton\";\r\nimport ShowHintsButton from \"../Buttons/ShowHintsButton\";\r\n\r\n// MUI Components\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n// Custom Styling\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nconst useStyles = makeStyles((theme) => ({\r\n    panel: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    infoArea: {\r\n        flex: '1 0 80%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    buttonArea: {\r\n        flex: '1 0 20%',\r\n        display: 'flex',\r\n    },\r\n}));\r\n\r\nexport default function CoachPanel(props) {\r\n    const classes = useStyles();\r\n\r\n    function getCommentLabel(mls) {\r\n        // console.log(`getCommentLabel called with moveList: ${mls}`);\r\n        let currentStatus = status(mls)\r\n        let currentOutcome = outcomeMap.get(mls)\r\n        let previousOutcome = outcomeMap.get(getParent(mls));\r\n        // console.log(`Current Outcome ${currentOutcome}`);\r\n        // console.log(`Previous Outcome ${previousOutcome}`);\r\n        let label = \"error\"\r\n        if (mls.length === 0) {\r\n            label = \"newGame\"\r\n        }\r\n        else if (mls.length === 1) {\r\n            if (mls.charAt(0) === \"5\") {\r\n                label = \"centerOpening\"\r\n            }\r\n            else if (Number(mls.charAt(0)) % 2 === 0) {\r\n                label = \"cornerOpening\"\r\n            }\r\n            else {\r\n                label = \"edgeOpening\"\r\n            }\r\n        } \r\n        else if (winningMoves(mls).length > 0 ) {\r\n            label = \"immediateWin\"\r\n        }\r\n        else if (urgentDefensiveMoves(mls).length === 1) {          //  Modify this to pre and postpend  \"A Mistake!\" and \"Not all moves are good in this position, choose carefully!\"\r\n            label = \"urgentDefence\"\r\n        }\r\n        else if (urgentDefensiveMoves(mls).length === 2) {\r\n            label = \"losing\"\r\n        }\r\n        else if (doubleAttackingMoves(mls).length > 0) {\r\n            label = \"doubleAttack\"\r\n        }\r\n        else if (currentStatus === \"xWins\") {\r\n            label = \"xWins\"\r\n        }\r\n        else if (currentStatus === \"oWins\") {\r\n            label = \"oWins\"\r\n        }\r\n        else if (currentStatus === \"draw\") {\r\n            label = \"draw\"\r\n        }\r\n        else if (previousOutcome === \"draw\" && currentOutcome === \"draw\") {\r\n            label = \"sound\"\r\n        }\r\n        else if (previousOutcome === \"draw\" && (currentOutcome === \"xWins\" || currentOutcome === \"oWins\")) {\r\n            label = \"mistake\"\r\n        }\r\n        else if (currentOutcome === \"draw\" && (previousOutcome === \"xWins\" || previousOutcome === \"oWins\")) {\r\n            label = \"missedWin\"\r\n        }\r\n        return label\r\n    }\r\n    let commentLabel = getCommentLabel(props.moveList)\r\n\r\n    return (\r\n        <Container maxWidth='sm' className={classes.panel} >\r\n            <Box className={classes.infoArea} >\r\n                <StatusHeader\r\n                    moveList={props.moveList}\r\n                />\r\n                <CoachsCommentary\r\n                    moveList={props.moveList}\r\n                    commentLabel={commentLabel}\r\n                /> \r\n            </Box>\r\n            <Grid container spacing={2} className={classes.buttonArea} >\r\n                <Grid item xs={7}   >\r\n                    <ShowHintsButton \r\n                        showHints={props.showHints}\r\n                        toggleShowHints={props.toggleShowHints}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={5}  >\r\n                    <UndoButton\r\n                        gameOver={false}\r\n                        moveList={props.moveList}\r\n                        handleUndoClick={props.handleUndoClick}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\n\r\n// My Logical Components\r\n// import positionToOutcomeMap from \"../pages/positionToOutcomeMap\";\r\nimport { gameOver } from \"../logic/GameLogic\";\r\n\r\n// My React Components\r\nimport TicTacToeBoard from \"../components/Board/TicTacToeBoard\";\r\nimport CoachPanel from \"../components/Panels/CoachPanel\";\r\n\r\n// MUI  components\r\nimport Box from '@material-ui/core/Box';\r\n\r\n// Custom Styling\r\nimport '../styles/TicTacToe.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        height: 'calc(100% - 3.6rem)',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n    },\r\n    boardArea: {\r\n        padding: '0.7rem',\r\n        width: 'min(55vh, 100%)',\r\n        height: '55vh',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    panelArea: {\r\n        width: '100%',\r\n        height: '45vh',\r\n    },\r\n}));\r\n\r\n// In Play With Coach mode X always goes first\r\n\r\nexport default function PlayWithCoach(props) {\r\n    const classes = useStyles();\r\n    const xGoesFirst = true  // X always goes first in Play with Coach Mode\r\n\r\n    let startingPosition = \"\"  // vs []\r\n    let [moveList, setmoveList] = useState(startingPosition);\r\n\r\n    let [showHints, setShowHints] = useState(false);\r\n    // let [showHints, setShowHints] = useState(true);\r\n\r\n    return (\r\n        <Box className={classes.root} >\r\n            {/* <SpacerBox /> */}\r\n            <Box py={1} />\r\n            <Box className={classes.boardArea}>\r\n                <TicTacToeBoard\r\n                    moveList={moveList}\r\n                    showHints={showHints}\r\n                    handleBoardClick={handleBoardClick}\r\n                />\r\n            </Box>\r\n            <Box className={classes.panelArea}>\r\n                <CoachPanel\r\n                    moveList={moveList}\r\n                    showHints={showHints}\r\n                    toggleShowHints={toggleShowHints}\r\n                    handleUndoClick={handleUndoClick}\r\n                />\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n    \r\n    // CLICK HANDLERS\r\n    function handleBoardClick(squareClicked) {\r\n        if (gameOver(moveList)) {\r\n            console.log(\"return without effects from handleSquareClick(). The Game is already over.\")\r\n            return;\r\n        }\r\n        if (moveList.includes(squareClicked)) {\r\n            console.log(\"return without effects from handleSquareClick(). That square has already been claimed.\")\r\n            return;\r\n        }\r\n        // If we reach this point the clicked square is open and the game is not over yet ... \r\n        let updatedMoveList = moveList.concat(squareClicked)\r\n        console.log(`MoveList: ${updatedMoveList}`)\r\n\r\n        setmoveList(updatedMoveList);\r\n        // This function does not pass along any of its results, it acts thru side-effects. It calls setHistory and use of that hook tells React it needs to re-render all components that depend on the state \"history\".\r\n    }\r\n    function handleUndoClick() {\r\n        const shortenedMoveList = moveList.slice(0, moveList.length - 1)\r\n        console.log(`handleUndoClick() removed ${moveList[moveList.length - 1]} . New Shortened history: ${shortenedMoveList}`);\r\n        setmoveList(shortenedMoveList);\r\n    }\r\n    // function handleNewGameClick() {\r\n    //     setmoveList(startingPosition);\r\n    // }\r\n    function toggleShowHints() {\r\n        setShowHints(!showHints)\r\n    }\r\n}\r\n","import {\r\n    createMuiTheme,\r\n    responsiveFontSizes,\r\n} from '@material-ui/core/styles';\r\n\r\n// import purple from '@material-ui/core/colors/purple';\r\n// import green from '@material-ui/core/colors/green';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: '#669944',\r\n            main: '#2e6b12',\r\n            dark: '#004000',\r\n            contrastText: '#FFFFFF'\r\n        },\r\n        secondary: {\r\n            light: '#FFFFF',\r\n            main: '#669944',\r\n            dark: '#777777',\r\n            contrastText: '#FFFFFF'\r\n        },\r\n        text: {\r\n            primary: '#FFFFFF',\r\n            secondary: '#000000'\r\n        },\r\n        action: {\r\n            disabledBackground: '#2e6b12',\r\n            disabledOpacity: '0.5'\r\n        }\r\n    },\r\n    typography: {\r\n        h4: {\r\n            lineHeight: 1.0\r\n        },\r\n        h5: {\r\n            lineHeight: 1.2\r\n        }\r\n    },\r\n    status: {\r\n        danger: 'orange',\r\n    },\r\n    shape: {\r\n        borderRadius: 8,\r\n    },\r\n    spacing: 8,\r\n\r\n});\r\n\r\n\r\nexport default responsiveFontSizes(theme);\r\n\r\n","import React from 'react';\r\nimport {\r\n    HashRouter as Router,\r\n    Link as RouterLink,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nimport logo from './logo.svg';\r\nimport './styles/App.css';\r\n\r\n// My Components & Pages\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport WelcomePage from \"./pages/WelcomePage\";\r\n// import MagicSquares from \"./pages/MagicSquares\";\r\n// import StrategyPage from \"./pages/StrategyPage\";\r\n\r\nimport PlayVsHuman from './pages/PlayVsHuman';\r\nimport PlayVsBot from './pages/PlayVsBot';\r\nimport PlayWithCoach from './pages/PlayWithCoach';\r\n\r\n\r\n// MUI  components\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n// THEMING\r\nimport theme from \"./theme\";\r\nimport {\r\n    makeStyles,\r\n    ThemeProvider,\r\n} from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n        width: '100vw',\r\n        backgroundColor: theme.palette.common.black,\r\n\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // justifyContent: 'center',\r\n        // alignItems: 'stretch',\r\n        overflowY: 'scroll',\r\n        overflowX: 'hidden',\r\n\r\n    },\r\n    container: {\r\n        // maxWidth='md' --> max-width: 960px;\r\n        backgroundColor: theme.palette.common.black,\r\n        height: '95vh',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    \r\n}))\r\n\r\n\r\nexport default function App() {\r\n    const classes = useStyles();\r\n    const [pageTitle, setPageTitle] = React.useState(\"Welcome\");\r\n  \r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <ThemeProvider theme={theme}>\r\n                <Box className={classes.root} >\r\n                    <Container className={classes.container} maxWidth='md' disableGutters>  \r\n                        <Router>\r\n                            <Switch>\r\n                                <Route exact path=\"/\">\r\n                                    <Navbar pageTitle={\"Welcome\"} />\r\n                                    <WelcomePage />\r\n                                </Route>\r\n\r\n                                <Route path=\"/play_vs_human\">\r\n                                    <Navbar pageTitle={\"Play Human vs. Human\"} />\r\n                                    <PlayVsHuman />\r\n                                </Route>\r\n\r\n                                <Route path=\"/play_vs_bot\">\r\n                                    <Navbar pageTitle={\"Play Human vs. Bot\"} />\r\n                                    <PlayVsBot />\r\n                                </Route>\r\n\r\n                                <Route path=\"/play_with_coach\">\r\n                                    <Navbar pageTitle={\"Play with Coach\"} />\r\n                                    <PlayWithCoach />\r\n                                </Route>    \r\n\r\n                                \r\n\r\n                                {/* <Route path=\"/magic_squares\">\r\n                                    <Navbar pageTitle={\"Learn about Magic Squares\"} />\r\n                                    <MagicSquares />\r\n                                </Route> */}\r\n\r\n\r\n                            </Switch>\r\n                        </Router>\r\n                    </Container>\r\n                </Box>\r\n            </ThemeProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n//   <React.StrictMode>\r\n    <App />,\r\n//   </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}